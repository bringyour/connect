// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v4.24.4
// source: frame.proto

package protocol

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// frames are used at all levels
// flatten all message types into this enum
type MessageType int32

const (
	MessageType_TransferPack               MessageType = 0
	MessageType_TransferAck                MessageType = 1
	MessageType_TransferContract           MessageType = 2
	MessageType_TransferProvide            MessageType = 3
	MessageType_TransferAuth               MessageType = 4
	MessageType_TransferCreateStream       MessageType = 5
	MessageType_TransferCreateStreamResult MessageType = 6
	// REMOVED
	MessageType_TransferCloseStream          MessageType = 7
	MessageType_TransferStreamOpen           MessageType = 8
	MessageType_TransferStreamClose          MessageType = 9
	MessageType_TransferCreateContract       MessageType = 10
	MessageType_TransferCreateContractResult MessageType = 11
	MessageType_TransferCloseContract        MessageType = 12
	MessageType_TransferPeerAudit            MessageType = 13
	MessageType_TestSimpleMessage            MessageType = 14
	MessageType_IpIpPacketToProvider         MessageType = 15
	MessageType_IpIpPacketFromProvider       MessageType = 16
	MessageType_IpIpPing                     MessageType = 17
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0:  "TransferPack",
		1:  "TransferAck",
		2:  "TransferContract",
		3:  "TransferProvide",
		4:  "TransferAuth",
		5:  "TransferCreateStream",
		6:  "TransferCreateStreamResult",
		7:  "TransferCloseStream",
		8:  "TransferStreamOpen",
		9:  "TransferStreamClose",
		10: "TransferCreateContract",
		11: "TransferCreateContractResult",
		12: "TransferCloseContract",
		13: "TransferPeerAudit",
		14: "TestSimpleMessage",
		15: "IpIpPacketToProvider",
		16: "IpIpPacketFromProvider",
		17: "IpIpPing",
	}
	MessageType_value = map[string]int32{
		"TransferPack":                 0,
		"TransferAck":                  1,
		"TransferContract":             2,
		"TransferProvide":              3,
		"TransferAuth":                 4,
		"TransferCreateStream":         5,
		"TransferCreateStreamResult":   6,
		"TransferCloseStream":          7,
		"TransferStreamOpen":           8,
		"TransferStreamClose":          9,
		"TransferCreateContract":       10,
		"TransferCreateContractResult": 11,
		"TransferCloseContract":        12,
		"TransferPeerAudit":            13,
		"TestSimpleMessage":            14,
		"IpIpPacketToProvider":         15,
		"IpIpPacketFromProvider":       16,
		"IpIpPing":                     17,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_frame_proto_enumTypes[0].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_frame_proto_enumTypes[0]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_frame_proto_rawDescGZIP(), []int{0}
}

type Frame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageType  MessageType `protobuf:"varint,1,opt,name=message_type,json=messageType,proto3,enum=bringyour.MessageType" json:"message_type,omitempty"`
	MessageBytes []byte      `protobuf:"bytes,2,opt,name=message_bytes,json=messageBytes,proto3" json:"message_bytes,omitempty"`
}

func (x *Frame) Reset() {
	*x = Frame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frame_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Frame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Frame) ProtoMessage() {}

func (x *Frame) ProtoReflect() protoreflect.Message {
	mi := &file_frame_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Frame.ProtoReflect.Descriptor instead.
func (*Frame) Descriptor() ([]byte, []int) {
	return file_frame_proto_rawDescGZIP(), []int{0}
}

func (x *Frame) GetMessageType() MessageType {
	if x != nil {
		return x.MessageType
	}
	return MessageType_TransferPack
}

func (x *Frame) GetMessageBytes() []byte {
	if x != nil {
		return x.MessageBytes
	}
	return nil
}

type FilteredFrame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageType MessageType `protobuf:"varint,1,opt,name=message_type,json=messageType,proto3,enum=bringyour.MessageType" json:"message_type,omitempty"`
}

func (x *FilteredFrame) Reset() {
	*x = FilteredFrame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frame_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilteredFrame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilteredFrame) ProtoMessage() {}

func (x *FilteredFrame) ProtoReflect() protoreflect.Message {
	mi := &file_frame_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilteredFrame.ProtoReflect.Descriptor instead.
func (*FilteredFrame) Descriptor() ([]byte, []int) {
	return file_frame_proto_rawDescGZIP(), []int{1}
}

func (x *FilteredFrame) GetMessageType() MessageType {
	if x != nil {
		return x.MessageType
	}
	return MessageType_TransferPack
}

var File_frame_proto protoreflect.FileDescriptor

var file_frame_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x62,
	0x72, 0x69, 0x6e, 0x67, 0x79, 0x6f, 0x75, 0x72, 0x22, 0x67, 0x0a, 0x05, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x12, 0x39, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x62, 0x72, 0x69, 0x6e, 0x67, 0x79,
	0x6f, 0x75, 0x72, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x22, 0x4a, 0x0a, 0x0d, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x62, 0x72, 0x69, 0x6e, 0x67,
	0x79, 0x6f, 0x75, 0x72, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x2a, 0xbc, 0x03,
	0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a,
	0x0c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x10, 0x00, 0x12,
	0x0f, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x41, 0x63, 0x6b, 0x10, 0x01,
	0x12, 0x14, 0x0a, 0x10, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x10, 0x04, 0x12, 0x18, 0x0a,
	0x14, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x10, 0x05, 0x12, 0x1e, 0x0a, 0x1a, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x10, 0x06, 0x12, 0x17, 0x0a, 0x13, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x10, 0x07,
	0x12, 0x16, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x4f, 0x70, 0x65, 0x6e, 0x10, 0x08, 0x12, 0x17, 0x0a, 0x13, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x10,
	0x09, 0x12, 0x1a, 0x0a, 0x16, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x10, 0x0a, 0x12, 0x20, 0x0a,
	0x1c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x10, 0x0b, 0x12,
	0x19, 0x0a, 0x15, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x6c, 0x6f, 0x73, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x10, 0x0c, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x50, 0x65, 0x65, 0x72, 0x41, 0x75, 0x64, 0x69, 0x74, 0x10,
	0x0d, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x65, 0x73, 0x74, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x10, 0x0e, 0x12, 0x18, 0x0a, 0x14, 0x49, 0x70, 0x49, 0x70,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x6f, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x10, 0x0f, 0x12, 0x1a, 0x0a, 0x16, 0x49, 0x70, 0x49, 0x70, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x46, 0x72, 0x6f, 0x6d, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x10, 0x10, 0x12, 0x0c,
	0x0a, 0x08, 0x49, 0x70, 0x49, 0x70, 0x50, 0x69, 0x6e, 0x67, 0x10, 0x11, 0x42, 0x27, 0x5a, 0x25,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x72, 0x69, 0x6e, 0x67,
	0x79, 0x6f, 0x75, 0x72, 0x2f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_frame_proto_rawDescOnce sync.Once
	file_frame_proto_rawDescData = file_frame_proto_rawDesc
)

func file_frame_proto_rawDescGZIP() []byte {
	file_frame_proto_rawDescOnce.Do(func() {
		file_frame_proto_rawDescData = protoimpl.X.CompressGZIP(file_frame_proto_rawDescData)
	})
	return file_frame_proto_rawDescData
}

var file_frame_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_frame_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_frame_proto_goTypes = []interface{}{
	(MessageType)(0),      // 0: bringyour.MessageType
	(*Frame)(nil),         // 1: bringyour.Frame
	(*FilteredFrame)(nil), // 2: bringyour.FilteredFrame
}
var file_frame_proto_depIdxs = []int32{
	0, // 0: bringyour.Frame.message_type:type_name -> bringyour.MessageType
	0, // 1: bringyour.FilteredFrame.message_type:type_name -> bringyour.MessageType
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_frame_proto_init() }
func file_frame_proto_init() {
	if File_frame_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_frame_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Frame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frame_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilteredFrame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_frame_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_frame_proto_goTypes,
		DependencyIndexes: file_frame_proto_depIdxs,
		EnumInfos:         file_frame_proto_enumTypes,
		MessageInfos:      file_frame_proto_msgTypes,
	}.Build()
	File_frame_proto = out.File
	file_frame_proto_rawDesc = nil
	file_frame_proto_goTypes = nil
	file_frame_proto_depIdxs = nil
}
